<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

require 'vendor/autoload.php';

class cetak extends CI_Controller {

	public function __construct() {
		parent::__construct();
    $this->load->model(['global_model', 'pegawai_model', 'instansi_model']);
	}

	public function tes(){
		$p = $this->input->get('p');
    $param = base64_decode(urldecode($p));
    $dtparam = explode('||', $param);

    $id_pegawai = $dtparam[0];
    $tgl_mulai = $dtparam[1];
    $tmulai = explode('/', $tgl_mulai);
    $tgl_hingga = $dtparam[2];
    $thingga = explode('/', $tgl_hingga);
    $mode = $dtparam[3];
		$url = base_url()."cetak/cetakperpegawai?p=".urlencode($p);

		$q_id_finger = "
			SELECT string_agg(user_id, ',') as user_id FROM public.mesin_user where id_pegawai = '".$id_pegawai."'
		";
		$finger = $this->global_model->getDataOne($q_id_finger);
		$badgenumber = str_replace(",","','",$finger['user_id']);

		$q_absen = "
		SELECT tanggal::date, tanggal::time as waktu, extract(dow from tanggal) as hari, otomatis, 0 as flag FROM absensi_log WHERE badgenumber In ('".$badgenumber."') AND tanggal::date BETWEEN (to_date('".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."','YYY-MM-DD') - 1) AND (to_date('".$thingga[2]."-".$thingga[1]."-".$thingga[0]."','YYY-MM-DD') + 1) ORDER BY tanggal, waktu
		";
		$absen = $this->global_model->getData($q_absen);
		$h_absen = array();
		$h_absen_kendala = array();
		foreach ($absen as $a) {
			if($a['otomatis']) {
				$h_absen[$a['tanggal']][] = $a;
			}
			else {
				$h_absen_kendala[$a['tanggal']][] = $a;
			}
		}

		$q_lembur = "
		SELECT tgl_lembur as tanggal, jam_lembur_awal, jam_lembur_akhir FROM t_lembur_pegawai WHERE id_pegawai = '".$id_pegawai."' AND tgl_lembur::date BETWEEN '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."' AND '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."' AND status = 1
		";
		$lembur = $this->global_model->getData($q_lembur);
		$h_lembur = array();
		foreach ($lembur as $l) {
			$h_lembur[$l['tanggal']][] = $l;
		}

		$q_ijin = "
		SELECT tgl::date as tanggal, extract(dow from tgl) as hari_tgl, mjic.kode, mjic.nama FROM t_ijin_cuti_pegawai as ticp LEFT JOIN generate_series(ticp.tgl_mulai, ticp.tgl_selesai, '1 day'::interval) tgl ON TRUE LEFT JOIN m_jenis_ijin_cuti as mjic ON ticp.id_jenis_ijin_cuti = mjic.id WHERE ticp.id_pegawai = '".$id_pegawai."' AND ticp.status = 1  AND (tgl_mulai::date BETWEEN '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."' AND '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."' OR tgl_selesai::date
		BETWEEN '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."' AND '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."')
		";
		$ijin = $this->global_model->getData($q_ijin);
		$h_ijin = array();
		foreach ($ijin as $i) {
			$h_ijin[$i['tanggal']][] = $i;
		}

		$q_jadwal = "
		SELECT tgl::date as tanggal, extract(dow from tgl) as hari_tgl, rjkh.tgl_mulai, jk.id as id_jam_kerja, jk.nama as nama_role_jam_kerja, rjkd.id_hari, jk.jam_mulai_scan_masuk, jk.jam_akhir_scan_masuk, jk.jam_mulai_scan_pulang, jk.jam_akhir_scan_pulang, jk.jam_masuk, jk.jam_pulang, jk.toleransi_terlambat, jk.toleransi_pulang_cepat, jk.masuk_hari_sebelumnya, jk.pulang_hari_berikutnya , shl.id as id_hari_libur, shl.keterangan, jkr.id as jkr_id_jam_kerja, jkr.nama as jkr_nama_role_jam_kerja, jkr.jam_mulai_scan_masuk as jkr_jam_mulai_scan_masuk, jkr.jam_akhir_scan_masuk as jkr_jam_akhir_scan_masuk, jkr.jam_mulai_scan_pulang as jkr_jam_mulai_scan_pulang, jkr.jam_akhir_scan_pulang as jkr_jam_akhir_scan_pulang, jkr.jam_masuk as jkr_jam_masuk, jkr.jam_pulang as jkr_jam_pulang, jkr.toleransi_terlambat as jkr_toleransi_terlambat, jkr.toleransi_pulang_cepat as jkr_toleransi_pulang_cepat, jkr.masuk_hari_sebelumnya as jkr_masuk_hari_sebelumnya, jkr.pulang_hari_berikutnya as jkr_pulang_hari_berikutnya
		FROM generate_series('".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."', '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."', '1 day'::interval) tgl
		LEFT JOIN LATERAL (
			SELECT tgl_mulai, id_role_jam_kerja
		    FROM m_pegawai_role_jam_kerja_histori
		    WHERE tgl_mulai <= tgl AND id_pegawai = '".$id_pegawai."'
		    ORDER BY tgl_mulai DESC
		    LIMIT 1
		) rjkh ON TRUE
		LEFT JOIN m_role_jam_kerja_detail as rjkd ON rjkh.id_role_jam_kerja = rjkd.id_role AND extract(dow from tgl) = rjkd.id_hari
		LEFT JOIN m_jam_kerja as jk ON rjkd.id_jam_kerja = jk.id
		LEFT JOIN s_hari_libur as shl ON tgl = shl.tanggal
		LEFT JOIN t_roster as tr ON tr.id_pegawai = '".$id_pegawai."' AND tr.tanggal = tgl
		LEFT JOIN m_jenis_roster as jr ON tr.id_jenis_roster = jr.id
		LEFT JOIN m_jam_kerja as jkr ON jr.id_jam_kerja = jkr.id
		order by tgl;
		";
		$jadwal = $this->global_model->getData($q_jadwal);

		$hasil = array();
		foreach($jadwal as $key => $j) {
			//penentuan jadwal
			$hasil[$key]['tanggal'] = $j['tanggal'];
			$hasil[$key]['hari'] = $j['hari_tgl'];
			if ($j['id_hari_libur'] <> null) {
				$hasil[$key]['nama_jam_kerja'] = $j['keterangan'];
				$hasil[$key]['jam_awal_scan_masuk'] = null;
				$hasil[$key]['jam_akhir_scan_masuk'] = null;
				$hasil[$key]['toleransi_terlambat'] = null;
				$hasil[$key]['jadwal_masuk'] = null;
				$hasil[$key]['jam_awal_scan_pulang'] = null;
				$hasil[$key]['jam_akhir_scan_pulang'] = null;
				$hasil[$key]['toleransi_pulang_cepat'] = null;
				$hasil[$key]['jadwal_pulang'] = null;
				$hasil[$key]['masuk_hari_sebelumnya'] = null;
				$hasil[$key]['pulang_hari_berikutnya'] = null;
				$hasil[$key]['jam_masuk'] = null;
				$hasil[$key]['jam_pulang'] = null;
				$hasil[$key]['keterangan'] = '*';
			}
			else if($j['jkr_id_jam_kerja'] <> null) {
				$hasil[$key]['nama_jam_kerja'] = $j['jkr_nama_role_jam_kerja'];
				$hasil[$key]['jam_awal_scan_masuk'] = $j['jkr_jam_mulai_scan_masuk'];
				$hasil[$key]['jam_akhir_scan_masuk'] = $j['jkr_jam_akhir_scan_masuk'];
				$hasil[$key]['toleransi_terlambat'] = $j['jkr_toleransi_terlambat'];
				$hasil[$key]['jadwal_masuk'] = $j['jkr_jam_masuk'];
				$hasil[$key]['jam_awal_scan_pulang'] = $j['jkr_jam_mulai_scan_pulang'];
				$hasil[$key]['jam_akhir_scan_pulang'] = $j['jkr_jam_akhir_scan_pulang'];
				$hasil[$key]['toleransi_pulang_cepat'] = $j['jkr_toleransi_pulang_cepat'];
				$hasil[$key]['jadwal_pulang'] = $j['jkr_jam_pulang'];
				$hasil[$key]['masuk_hari_sebelumnya'] = $j['jkr_masuk_hari_sebelumnya'];
				$hasil[$key]['pulang_hari_berikutnya'] = $j['jkr_pulang_hari_berikutnya'];
			}
			else {
				$hasil[$key]['nama_jam_kerja'] = $j['nama_role_jam_kerja'];
				$hasil[$key]['jam_awal_scan_masuk'] = $j['jam_mulai_scan_masuk'];
				$hasil[$key]['jam_akhir_scan_masuk'] = $j['jam_akhir_scan_masuk'];
				$hasil[$key]['toleransi_terlambat'] = $j['toleransi_terlambat'];
				$hasil[$key]['jadwal_masuk'] = $j['jam_masuk'];
				$hasil[$key]['jam_awal_scan_pulang'] = $j['jam_mulai_scan_pulang'];
				$hasil[$key]['jam_akhir_scan_pulang'] = $j['jam_akhir_scan_pulang'];
				$hasil[$key]['toleransi_pulang_cepat'] = $j['toleransi_pulang_cepat'];
				$hasil[$key]['jadwal_pulang'] = $j['jam_pulang'];
				$hasil[$key]['masuk_hari_sebelumnya'] = $j['masuk_hari_sebelumnya'];
				$hasil[$key]['pulang_hari_berikutnya'] = $j['pulang_hari_berikutnya'];
			}

			//penentuan jam masuk dan pulang

			//ada ijin
			if(isset($h_ijin[$j['tanggal']])) {
				$hasil[$key]['jam_masuk'] = null;
				$hasil[$key]['jam_pulang'] = null;
				//$hasil[$key]['keterangan'] = $h_ijin[$j['tanggal']][count($h_ijin[$j['tanggal']])] - 1]['kode'];
			}
			else {
				//cek lembur
				if(isset($h_lembur[[$j['tanggal']])) {
					$hasil[$key]['jam_lembur_awal'] = $h_lembur[[$j['tanggal']][count($h_lembur[$j['tanggal']])] - 1]['jam_lembur_awal'];
					$hasil[$key]['jam_lembur_akhir'] = $h_lembur[[$j['tanggal']][count($h_lembur[$j['tanggal']])] - 1]['jam_lembur_akhir'];
				}
				else {
					$hasil[$key]['jam_lembur_awal'] = null;
					$hasil[$key]['jam_lembur_akhir'] = null;
				}
				// bila ada kendala
				if(isset($h_absen_kendala[$j['tanggal']])) {
					//jumlah kendala dalam satu hari > 1
					if(count($h_absen_kendala[$j['tanggal']) > 1) {
						$jam_masuk = $h_absen_kendala[$j['tanggal']][0]['waktu'];
						$jam_pulang = $h_absen_kendala[$j['tanggal']][(count($h_absen_kendala[$a['tanggal']) - 1)]['waktu'];
						//jam masuk sebelum jam awal scan masuk atau melebihi jam akhir scan masuk dianggap tidak masuk, karena tidak pernah hadir
						if($hasil[$key]['jam_awal_scan_masuk'] >= $jam_masuk || $jam_masuk >= $hasil[$key]['jam_akhir_scan_masuk']) {
							$hasil[$key]['jam_masuk'] = null;
							$hasil[$key]['jam_pulang'] = null;
							$hasil[$key]['keterangan'] = 'M';
						}
						else {
							$index = count($h_absen_kendala[$j['tanggal']]) - 1;
							$jam_pulang = $h_absen_kendala[$j['tanggal']][$index]['waktu'];
							//penentuan jam pulang mencari jam diatas jam awal scan pulang dan sebelum jam akhir scan pulang
							while(($hasil[$key]['jam_awal_scan_pulang'] >= $jam_pulang || $jam_pulang >= $hasil[$key]['jam_akhir_scan_pulang']) && $index > 0 ) {
								$index--;
								$jam_pulang = $h_absen_kendala[$j['tanggal']][$index]['waktu'];
							}
							$h_absen_kendala[$j['tanggal']][0]['flag'] = 1;
							$h_absen_kendala[$j['tanggal']][$index]['flag'] = 1;
							$hasil[$key]['jam_masuk'] = $jam_masuk;
							$hasil[$key]['jam_pulang'] = $jam_pulang;
							$hasil[$key]['keterangan'] = 'H';
						}
					}
					//jumlah kendala hanya 1
					else {
						// ada log absen
						if(isset($h_absen[$j['tanggal'])) {
							//log absen lebih dari 1
							if(count($h_absen[$j['tanggal']]) > 1) {
								$jam = $h_absen_kendala[$j['tanggal'][0]['waktu'];
								$index = count($h_absen[$j['tanggal']]) - 1;
								foreach ($h_absen[$j['tanggal'] as $k => $v) {
									if ($jam < $v['waktu']) {
										$index = $k;
									}
								}
								//jam kendala paling kecil
								if($index == 0) {
									$jam_masuk = $h_absen_kendala[$j['tanggal'][0]['waktu'];
									$index = count($h_absen[$j['tanggal']]) - 1;
									$jam_pulang = $h_absen[$j['tanggal']][$index]['waktu'];
									//penentuan jam pulang mencari jam diatas jam awal scan pulang dan sebelum jam akhir scan pulang
									while(($hasil[$key]['jam_awal_scan_pulang'] >= $jam_pulang || $jam_pulang >= $hasil[$key]['jam_akhir_scan_pulang']) && $index > 0 ) {
										$index--;
										$jam_pulang = $h_absen_kendala[$j['tanggal']][$index]['waktu'];
									}
									if($jam_pulang < $jam_masuk) {
										$jam_pulang = $jam_masuk;
									}
									else {
										$h_absen[$j['tanggal']][$index]['flag'] = 1;
									}
									$h_absen_kendala[$j['tanggal']][0]['flag'] = 1;
									$hasil[$key]['jam_masuk'] = $jam_masuk;
									$hasil[$key]['jam_pulang'] = $jam_pulang;
									$hasil[$key]['keterangan'] = 'H';
								}
								//jam kendala di tengah
								else if ($index < count($h_absen[$j['tanggal']])) {

								}
								//jam kendala paling besar
								else {
									$jam_masuk = $h_absen[$j['tanggal'][0]['waktu'];
									$jam_pulang = $h_absen_kendala[$j['tanggal'][0]['waktu'];
								}
							}
							//log absen hanya 1
							else {
								$jam_masuk = $h_absen_kendala[$j['tanggal'][0]['waktu'];
								$jam_pulang = $h_absen[$j['tanggal'][0]['waktu'];
								if($jam_masuk > $jam_pulang) {
									$temp = $jam_masuk;
									$jam_masuk = $jam_pulang;
									$jam_pulang = $jam_masuk;
								}
								//jam masuk sebelum jam awal scan masuk atau melebihi jam akhir scan masuk dianggap tidak masuk, karena tidak pernah hadir
								if($hasil[$key]['jam_awal_scan_masuk'] >= $jam_masuk || $jam_masuk >= $hasil[$key]['jam_akhir_scan_masuk']) {
									$hasil[$key]['jam_masuk'] = null;
									$hasil[$key]['jam_pulang'] = null;
									$hasil[$key]['keterangan'] = 'M';
								}
								else {
									$h_absen_kendala[$j['tanggal']][0]['flag'] = 1;
									$h_absen[$j['tanggal']][$index]['flag'] = 1;
									$hasil[$key]['jam_masuk'] = $jam_masuk;
									$hasil[$key]['jam_pulang'] = $jam_pulang;
									$hasil[$key]['keterangan'] = 'H';
								}
							}
						}
						//tidak ada log absen
						else {
							$jam_masuk = $h_absen_kendala[$j['tanggal']][0]['waktu'];
							$jam_pulang = $h_absen_kendala[$j['tanggal']][0]['waktu'];
							//jam masuk sebelum jam awal scan masuk atau melebihi jam akhir scan masuk dianggap tidak masuk, karena tidak pernah hadir
							if($hasil[$key]['jam_awal_scan_masuk'] >= $jam_masuk || $jam_masuk >= $hasil[$key]['jam_akhir_scan_masuk']) {
								$hasil[$key]['jam_masuk'] = null;
								$hasil[$key]['jam_pulang'] = null;
								$hasil[$key]['keterangan'] = 'M';
							}
							else {
								$h_absen_kendala[$j['tanggal']][0]['flag'] = 1;
								$hasil[$key]['jam_masuk'] = $jam_masuk;
								$hasil[$key]['jam_pulang'] = $jam_pulang;
								$hasil[$key]['keterangan'] = 'H';
							}
						}
					}
				}
				// tidak ada kendala
				else {
					// ada log absen
					if(isset($h_absen[$j['tanggal'])) {
						//log absen lebih dari 1
						if(count($h_absen[$j['tanggal']]) > 1) {
						}
						//log absen hanya ada 1
						else {
							$jam_masuk = $h_absen[$j['tanggal']][0]['waktu'];
							$jam_pulang = $h_absen[$j['tanggal']][0]['waktu'];
							//jam masuk sebelum jam awal scan masuk atau melebihi jam akhir scan masuk dianggap tidak masuk, karena tidak pernah hadir
							if($hasil[$key]['jam_awal_scan_masuk'] >= $jam_masuk || $jam_masuk >= $hasil[$key]['jam_akhir_scan_masuk']) {
								$hasil[$key]['jam_masuk'] = null;
								$hasil[$key]['jam_pulang'] = null;
								$hasil[$key]['keterangan'] = 'M';
							}
							else {
								$h_absen_kendala[$j['tanggal']][0]['flag'] = 1;
								$hasil[$key]['jam_masuk'] = $jam_masuk;
								$hasil[$key]['jam_pulang'] = $jam_pulang;
								//cek lembur
								if (isset[$hasil[$key]['jam_lembur_awal']]) {
									if($hasil[$key]['jam_lembur_awal'] == $hasil[$key]['jadwal_pulang']) {
										$hasil[$key]['jam_pulang'] = $hasil[$key]['jam_lembur_akhir'];
									}
								}
								$hasil[$key]['keterangan'] = 'H';
							}
						}
					}
					else {
						$hasil[$key]['jam_masuk'] = null;
						$hasil[$key]['jam_pulang'] = null;
						$hasil[$key]['keterangan'] = 'M';
					}
				}

				//untuk masuk atau pulang di hari lain
				//if($hasil[$key]['masuk_hari_sebelumnya'] || $hasil[$key]['pulang_hari_berikutnya']) {

				//}
				//masuk atau pulang di hari ini
				//else {

				//}
			}
		}
		foreach ($hasil as $key => $value) {
			var_dump($value);
			echo '<br>';
		}

		$this->output->enable_profiler(TRUE);
	}

	// $q_absen = "
	// 	SELECT tanggal::date, tanggal::time as waktu, extract(dow from tanggal) as hari FROM absensi_log where badgenumber In (".$q_id_finger['user_id'].") AND tanggal BETWEEN '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."' AND '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."' order by tanggal, waktu
	// ";
	// $absen = $this->global_model->getData($q_absen);

	// $q_jadwal = "
	// SELECT rjkh.tgl_mulai, rjkd.id_hari, jk.jam_mulai_scan_masuk, jk.jam_akhir_scan_masuk, jk.jam_mulai_scan_pulang, jk.jam_akhir_scan_pulang, jk.jam_masuk, jk.jam_pulang,  jk.toleransi_terlambat, jk.toleransi_pulang_cepat, jk.masuk_hari_sebelumnya, jk.pulang_hari_berikutnya FROM m_pegawai_role_jam_kerja_histori as rjkh LEFT JOIN m_role_jam_kerja_detail as rjkd ON rjkh.id_role_jam_kerja = rjkd.id_role LEFT JOIN m_jam_kerja as jk ON rjkd.id_jam_kerja = jk.id where rjkh.id_pegawai = '".$id_pegawai."'  AND (rjkh.tgl_mulai <= ''".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."'' OR rjkh.tgl_mulai <= '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."') order by rjkh.tgl_mulai, rjkd.id_hari
	// ";

  public function cetakperpegawai() {
    $p = $this->input->get('p');
    $param = base64_decode(urldecode($p));
    $dtparam = explode('||', $param);

    $id_pegawai = $dtparam[0];
    $tgl_mulai = $dtparam[1];
    $tmulai = explode('/', $tgl_mulai);
    $tgl_hingga = $dtparam[2];
    $thingga = explode('/', $tgl_hingga);
    $mode = $dtparam[3];
		$url = base_url()."cetak/cetakperpegawai?p=".urlencode($p);

		$select = "m_pegawai.*, m_unit_organisasi_kerja.nama as nama_unor, m_instansi.nama as nama_instansi, m_jenis_jabatan.nama as nama_jenis_jabatan, m_status_pegawai.nama as nama_status_pegawai";
		$join = array(
			array(
				"table" => "m_unit_organisasi_kerja",
				"on"    => "m_pegawai.kode_unor = m_unit_organisasi_kerja.kode"
			),
			array(
				"table" => "m_instansi",
				"on"    => "m_unit_organisasi_kerja.kode_instansi = m_instansi.kode"
			),
			array(
				"table" => "m_eselon",
				"on"    => "m_pegawai.kode_eselon = m_eselon.kode"
			),
			array(
				"table" => "m_jenis_jabatan",
				"on"    => "m_pegawai.kode_jenis_jabatan = m_jenis_jabatan.kode"
			),
			array(
				"table" => "m_status_pegawai",
				"on"    => "m_pegawai.kode_status_pegawai = m_status_pegawai.kode"
			),
			array(
				"table" => "m_golongan",
				"on"    => "m_pegawai.kode_golongan_akhir = m_golongan.kode"
			)
		);
		$where         = "id = '".$id_pegawai."' ";
		$pegawai = $this->pegawai_model->getDataJoin($where, $select, $join);

    $query = "
      select * from fn_rpt_rekap_per_pegawai('', '".$id_pegawai."', '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."', '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."') as (
      id_pegawai varchar, nip varchar, nama varchar, kode_unor varchar, unor varchar, tanggal date, hari varchar,hari_status varchar, jam_Kerja varchar,ada_roster boolean,
      jam_masuk timestamp without time zone, absen_masuk timestamp without time zone, telat_jam double precision, telat_menit double precision,
      jam_pulang timestamp without time zone, absen_pulang timestamp without time zone, pulang_cepat_jam double precision, pulang_cepat_menit double precision,
      overtime_jam double precision, overtime_menit double precision,
      sabtu_jam double precision, sabtu_menit double precision, minggu_jam double precision, minggu_menit double precision,
      keterangan varchar, kode_instansi varchar,instansi varchar,jabatan varchar)";

    //$isi = $this->global_model->getData($query);

		//$q_id_finger = "SELECT * FROM mesin_user where id_pegawai = '".$id_pegawai."'";
		$q_id_finger = "
			SELECT string_agg(user_id, ',') as user_id FROM public.mesin_user where id_pegawai = '".$id_pegawai."'
		";
		$finger = $this->global_model->getData($q_id_finger);

		$q_absen = "
			SELECT tanggal::date, tanggal::time as waktu, extract(dow from tanggal) as hari FROM absensi_log where badgenumber In (".$q_id_finger['user_id'].") AND tanggal BETWEEN '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."' AND '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."' order by tanggal, waktu
		";
		$absen = $this->global_model->getData($q_absen);

    $data["isi"] = $isi;
    $data["tgl_mulai"] = $tgl_mulai;
    $data["tgl_hingga"] = $tgl_hingga;
    $data["pegawai"] = $pegawai;
    $data["url"] = $url;
		$current_date = date('d/m/Y H:i:s');

		//$this->load->view('cetak/perpegawai/header', $data);
    //$this->load->view('cetak/perpegawai/body', $data);

		$nama_dokumen = "Laporan_Per_Pegawai_".str_replace(" ","_",$data["pegawai"]->nama)."_Tanggal_".$tgl_mulai."_s/d_".$tgl_hingga;

		if($mode == 'pdf') {
			ini_set('memory_limit', '-1');
			// $this->load->view('cetak/perpegawai/header', $data);
      // $this->load->view('cetak/perpegawai/body', $data);

			$html_header = $this->load->view('cetak/perpegawai/header', $data, true); //render the view into HTML
			$html_body = $this->load->view('cetak/perpegawai/body', $data, true); //render the view into HTML

			$this->load->library('pdf');
			$pdf=$this->pdf->load("en-GB-x","A4","","",10,10,45,10,6,3,"P");
			$pdf->SetWatermarkImage('http://garbis.surabaya.go.id/v3beta/assets/images/logo_pemkot_watermark.jpg', 0.3, 'F');
			$pdf->showWatermarkImage = true;
			$pdf->SetHTMLHeader($html_header);
			$pdf->SetFooter(''.'Halaman {PAGENO} dari {nb}||'.$current_date.''); //Add a footer for good measure
			$pdf->WriteHTML($html_body); //write the HTML into PDF
			$pdf->Output($nama_dokumen.".pdf" ,'I');
		}

		else if($mode == 'xls') {
			//$this->load->library('ciqrcode');

			//$config['cacheable']    = true; //boolean, the default is true
      //$config['cachedir']     = './assets/'; //string, the default is application/cache/
      //$config['errorlog']     = './assets/'; //string, the default is application/logs/
      //$config['imagedir']     = './assets/images/'; //direktori penyimpanan qr code
      //$config['quality']      = true; //boolean, the default is true
      //$config['size']         = '1024'; //interger, the default is 1024
      //$config['black']        = array(224,255,255); // array, default is array(255,255,255)
      //$config['white']        = array(70,130,180); // array, default is array(0,0,0)
      //$this->ciqrcode->initialize($config);

      //$image_name=$p.'.png'; //buat name dari qr code sesuai dengan nim

      //$params['data'] = $url; //data yang akan di jadikan QR CODE
      //$params['level'] = 'H'; //H=High
      //$params['size'] = 10;
      //$params['savename'] = FCPATH.$config['imagedir'].$image_name; //simpan image QR CODE ke folder assets/images/
      //$this->ciqrcode->generate($params); // fungsi untuk generate QR CODE

			// Fungsi header dengan mengirimkan raw data excel
			header("Cache-Control: no-cache, no-store, must-revalidate");
			header("Content-Type: application/vnd.ms-excel");
			// Mendefinisikan nama file ekspor "hasil-export.xls"
			header("Content-Disposition: attachment; filename=".$nama_dokumen.".xls");

			$this->load->view('cetak/perpegawai/excel', $data);

			ob_end_clean();

			//$html_header = $this->load->view('cetak/perpegawai/header', $data, true); //render the view into HTML
			//$html_body = $html_header.$this->load->view('cetak/perpegawai/body', $data, true); //render the view into HTML

			//$this->load->helper("file");
			//$fileName = "temp_file_name.html";
			//$path = APPPATH."views/excel/";
			//$path_file = $path . $fileName;

			//if (write_file($path_file, $html_body)) {
				//$reader = new \PhpOffice\PhpSpreadsheet\Reader\Html();
		    //$spreadsheet = $reader->load($path_file);

		    //write out to html file
		    //$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
		    //$writer->save($path. "doc.xlsx");

				// Fungsi header dengan mengirimkan raw data excel
				//header("Content-type: application/vnd-ms-excel");
				// Mendefinisikan nama file ekspor "hasil-export.xls"
				//header("Content-Disposition: attachment; filename=".$nama_dokumen.".xls");
				//$this->load->view($path_file);

		    //delete the temporary file
		    //unlink($path_file);
			//}
			//else{
				//echo "
				//	<script>
				//		alert('Terjadi Kesalahan, Silahkan Kontak Administrator');
				//		window.close();
				//	</script>
				//";
			//}
		}
		else if($mode == 'html') {
			$this->load->view('cetak/perpegawai/header', $data);
      $this->load->view('cetak/perpegawai/body', $data);
		}
		else{
			echo "
				<script>
					alert('Terjadi Kesalahan, Silahkan Kontak Administrator');
					window.close();
				</script>
			";
		}
  }

	public function cetakrekapinstansi() {
		$p = $this->input->get('p');
    $param = base64_decode(urldecode($p));
    $dtparam = explode('||', $param);

    $kode_instansi = $dtparam[0];
		$status_pegawai = $dtparam[1];
    $tgl_mulai = $dtparam[2];
    $tmulai = explode('/', $tgl_mulai);
    $tgl_hingga = $dtparam[3];
    $thingga = explode('/', $tgl_hingga);
    $mode = $dtparam[4];
		$url = base_url()."cetak/cetakrekapinstansi?p=".urlencode($p);

		$where ="kode = '".$kode_instansi."' ";
		$instansi = $this->instansi_model->getData($where);

		$query = "
		select x.*,j.nama as jabatan from(
			select * from fn_rpt_rekap_per_instansi('".$kode_instansi."', '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."', '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."') as (id_pegawai varchar, nama varchar, nip varchar, kerja bigint, jml_hari_hadir bigint,
				jml_hari_telat bigint, jml_hari_pulang_cepat bigint, overtime_jam double precision, overtime_menit double precision, sabtu_jam double precision, sabtu_menit double precision,
				minggu_jam double precision, minggu_menit double precision, ket_m bigint, ket_ch bigint, ket_cm bigint, ket_ct bigint,ket_cap bigint,
				ket_dk bigint, ket_dl bigint, ket_i bigint, ket_lp bigint, ket_mpp bigint, ket_sk bigint, ket_tb bigint, ket_upt bigint))x
				left join m_pegawai p on x.id_pegawai=p.id
				left join m_jenis_jabatan j on p.kode_jenis_jabatan=j.kode
		";
		$where = "where p.kode_status_pegawai <> '5'";
		if ($status_pegawai == 0) {
			$where = "where p.kode_status_pegawai = '5'";
		}

		$order = "order by coalesce(j.urut,1000),coalesce(p.kode_eselon,'z'),coalesce(p.kode_golongan_akhir,'z') desc";

		$isi = $this->global_model->getData($query." ".$where." ".$order);
		$data["isi"] = $isi;
		$data["tgl_mulai"] = $tgl_mulai;
		$data["tgl_hingga"] = $tgl_hingga;
		$data["instansi"] = $instansi;
		$data["url"] = $url;
		$current_date = date('d/m/Y H:i:s');

		$nama_dokumen = "Laporan_Rekapitulasi_Pegawai_".str_replace(" ","_",$instansi->nama)."_Tanggal_".$tgl_mulai."_s/d_".$tgl_hingga;

		if($mode == 'pdf') {
			ini_set('memory_limit', '-1');
			// $this->load->view('cetak/rekap_instansi/header', $data);
			// $this->load->view('cetak/rekap_instansi/body', $data);

			$html_header = $this->load->view('cetak/rekap_instansi/header', $data, true); //render the view into HTML
			$html_body = $this->load->view('cetak/rekap_instansi/body', $data, true); //render the view into HTML

			$this->load->library('pdf');
			$pdf=$this->pdf->load("en-GB-x","A4-L","","",10,10,45,10,6,3,"L");
			$pdf->SetWatermarkImage('http://garbis.surabaya.go.id/v3beta/assets/images/logo_pemkot_watermark.jpg', 0.3, 'F');
			$pdf->showWatermarkImage = true;
			$pdf->SetHTMLHeader($html_header);
			$pdf->SetFooter(''.'Halaman {PAGENO} dari {nb}||'.$current_date.''); //Add a footer for good measure
			$pdf->WriteHTML($html_body); //write the HTML into PDF
			$pdf->Output($nama_dokumen.".pdf" ,'I');
		}
		else if($mode == 'xls') {
			// Fungsi header dengan mengirimkan raw data excel
			header("Cache-Control: no-cache, no-store, must-revalidate");
			header("Content-Type: application/vnd.ms-excel");
			// Mendefinisikan nama file ekspor "hasil-export.xls"
			header("Content-Disposition: attachment; filename=".$nama_dokumen.".xls");

			$this->load->view('cetak/rekap_instansi/excel', $data);

			ob_end_clean();
		}
		else if($mode == 'html') {
			$this->load->view('cetak/rekap_instansi/header', $data);
			$this->load->view('cetak/rekap_instansi/body', $data);
		}
		else{
			echo "
				<script>
					alert('Terjadi Kesalahan, Silahkan Kontak Administrator');
					window.close();
				</script>
			";
		}
	}

	public function cetakskor() {
		$p = $this->input->get('p');
    $param = base64_decode(urldecode($p));
    $dtparam = explode('||', $param);

    $kode_instansi = $dtparam[0];
		$status_pegawai = $dtparam[1];
    $tgl_mulai = $dtparam[2];
    $tmulai = explode('/', $tgl_mulai);
    $tgl_hingga = $dtparam[3];
    $thingga = explode('/', $tgl_hingga);
    $mode = $dtparam[4];
		$url = base_url()."cetak/cetakrekapinstansi?p=".urlencode($p);
		$status = 'pns';
		if ($status_pegawai == 0) {
			$status = 'non_pns';
		}

		$where ="kode = '".$kode_instansi."' ";
		$instansi = $this->instansi_model->getData($where);

		$query = "
				select * from fn_rpt_hitung_rekap_per_instansi_skor('".$kode_instansi."', '".$tmulai[2]."-".$tmulai[1]."-".$tmulai[0]."', '".$thingga[2]."-".$thingga[1]."-".$thingga[0]."','".$status."') as (
								nama varchar, nip varchar, golongan varchar, jabatan varchar,k_freq1 bigint, k_skor1 double precision,
								k_freq2 bigint, k_skor2 double precision, k_freq3 bigint, k_skor3 double precision, k_freq4 bigint, k_skor4 double precision, k_freq5 bigint, k_skor5 double precision,
								p_freq1 bigint, p_skor1 double precision, p_freq2 bigint, p_skor2 double precision, p_freq3 bigint, p_skor3 double precision, p_freq4 bigint, p_skor4 double precision, p_freq5 bigint, p_skor5 double precision,
								c_s_freq bigint, c_s_skor double precision, c_hms_freq bigint, c_hms_skor double precision, th_s_freq bigint, th_s_skor double precision, th_ts_freq bigint, th_ts_skor double precision,dl_freq double precision,ct_freq double precision,jml_hari double precision,jml_hadir double precision)
		";

		//$order = "order by coalesce(j.urut,1000),coalesce(p.kode_eselon,'z'),coalesce(p.kode_golongan_akhir,'z') desc";

		$isi = $this->global_model->getData($query);
		$data["isi"] = $isi;
		$data["tgl_mulai"] = $tgl_mulai;
		$data["tgl_hingga"] = $tgl_hingga;
		$data["instansi"] = $instansi;
		$data["url"] = $url;
		$current_date = date('d/m/Y H:i:s');

		$nama_dokumen = "Laporan_Skor_Kehadiran_".str_replace(" ","_",$instansi->nama)."_Tanggal_".$tgl_mulai."_s/d_".$tgl_hingga;

		if($mode == 'pdf') {
			ini_set('memory_limit', '-1');
			// $this->load->view('cetak/rekap_instansi/header', $data);
			// $this->load->view('cetak/rekap_instansi/body', $data);

			$html_header = $this->load->view('cetak/skor/header', $data, true); //render the view into HTML
			$html_body = $this->load->view('cetak/skor/body', $data, true); //render the view into HTML

			$this->load->library('pdf');
			$pdf=$this->pdf->load("en-GB-x","A4-L","","",10,10,45,10,6,3,"L");
			$pdf->SetWatermarkImage('http://garbis.surabaya.go.id/v3beta/assets/images/logo_pemkot_watermark.jpg', 0.3, 'F');
			$pdf->showWatermarkImage = true;
			$pdf->SetHTMLHeader($html_header);
			$pdf->SetFooter(''.'Halaman {PAGENO} dari {nb}||'.$current_date.''); //Add a footer for good measure
			$pdf->WriteHTML($html_body); //write the HTML into PDF
			$pdf->Output($nama_dokumen.".pdf" ,'I');
		}
		else if($mode == 'xls') {
			// Fungsi header dengan mengirimkan raw data excel
			header("Cache-Control: no-cache, no-store, must-revalidate");
			header("Content-Type: application/vnd.ms-excel");
			// Mendefinisikan nama file ekspor "hasil-export.xls"
			header("Content-Disposition: attachment; filename=".$nama_dokumen.".xls");

			$this->load->view('cetak/skor/excel', $data);

			ob_end_clean();
		}
		else if($mode == 'html') {
			$this->load->view('cetak/skor/header', $data);
			$this->load->view('cetak/skor/body', $data);
		}
		else{
			echo "
				<script>
					alert('Terjadi Kesalahan, Silahkan Kontak Administrator');
					window.close();
				</script>
			";
		}
	}
}
